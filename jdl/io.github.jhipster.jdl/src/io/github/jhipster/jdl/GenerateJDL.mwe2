module io.github.jhipster.jdl.GenerateJDL

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = lib.pp.JdlLanguageGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "io.github.jhipster.jdl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "io.github.jhipster.jdl.JDL"
			fileExtensions = "jdl,jh"

/*
			fragment = io.typefox.xtext2langium.Xtext2LangiumFragment {
//				prefixEnumLiterals = false
				useStringAsEnumRuleType = true
		        outputPath = './langium'
    		}
*/
			referencedResource = "platform:/resource/jbase/model/generated/JBase.genmodel"

/* 	
 * Disabled for the moment...
 * 		
			fragment = com.itemis.xtext.generator.vscode.VSCodeExtensionFragment {
				publisher = "jhipster-ide"
			}
			
			fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
			    antlrParam = "-Xconversiontimeout"
		      	antlrParam = "10000"
			    options = {
			        memoize = true
					backtrack = true
			    }
			}

			emfGenerator = {
				emfRuntimeVersion = "2.20"
			}
*/

            projectWizard = {
                generate = true
            }
            
			serializer = {
				generateStub = false
			}
			
			formatter = formatting.Formatter2Fragment2 {
				generateStub = true
			}			
			
			validator = {
				generateXtendStub = true
				composedCheck = "io.github.jhipster.jdl.validation.JDLNamesAreUniqueValidator"
//				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
